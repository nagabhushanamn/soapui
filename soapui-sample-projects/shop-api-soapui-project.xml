<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="a05eda6d-5312-4728-b429-e238267be4af" activeEnvironment="Default" name="Project 1" resourceRoot="" soapui-version="5.4.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="c220d7cf-dfd6-4b7e-9a68-fcfc96de0fd5" wadlVersion="http://wadl.dev.java.net/2009/02" name="shop-api" type="rest" basePath="/api" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description xsi:nil="true"/><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://0.0.0.0:3000</con:endpoint></con:endpoints><con:resource name="/Users" path="/Users" id="2b4450e2-2b68-4192-9f91-12e64f6add2b"><con:settings/><con:parameters/><con:method name="User.find" id="e2d3d7a9-0672-4222-9922-971b1d8a2f35" method="GET"><con:description>
Find all instances of the model matched by filter from the data source.</con:description><con:settings/><con:parameters><con:parameter><con:name>filter</con:name><con:style>QUERY</con:style><con:description>Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="64159ec3-55a7-4cb4-a12f-51d146dc137a" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="User.create" id="19ae9efe-7eed-42cd-9557-441c5d680007" method="POST"><con:description>
Create a new instance of the model and persist it into the data source.</con:description><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:user="http://localhost/api/Users">user:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>422</con:status><con:params/><con:element xmlns:user="http://localhost/api/Users">user:Fault</con:element></con:representation><con:request name="Request 1" id="dcc29490-1bc5-4eb7-b6bc-c02ee84110fd" mediaType="application/json" postQueryString="false"><con:settings/><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="User.upsert__put_Users" id="813f1b30-0372-4249-aa3b-ac2164578587" method="PUT"><con:description>
Patch an existing model instance or insert a new one into the data source.</con:description><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="262cda44-b259-49a5-a342-adc58dcb7ceb" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="User.upsert__patch_Users" id="3d4923f6-13c1-4110-bd29-e7f78c8ee2e0" method="PATCH"><con:description>
Patch an existing model instance or insert a new one into the data source.</con:description><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="c7e8f5e2-f27a-4d98-8e0f-05add16921ee" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/Users/change-stream" path="/Users/change-stream" id="9a8d0201-9b89-4743-bde9-09419b9f49f9"><con:settings/><con:parameters/><con:method name="User.createChangeStream__get_Users_change-stream" id="27355f9f-7a53-4157-a1ce-c4ea7c4ae3f3" method="GET"><con:description>
Create a change stream.</con:description><con:settings/><con:parameters><con:parameter><con:name>options</con:name><con:style>QUERY</con:style><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="f72bdbc4-62f9-481f-bc1f-9b772450b585" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="User.createChangeStream__post_Users_change-stream" id="a98441ab-2ee0-4b88-a9eb-8a4adeee0781" method="POST"><con:description>
Create a change stream.</con:description><con:settings/><con:parameters><con:parameter><con:name>options</con:name><con:style>QUERY</con:style><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="59df9cfc-13d9-46f1-9ddc-5268e170183d" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/Users/confirm" path="/Users/confirm" id="4770f0e9-3397-4e5a-bbf0-1ac0490cff35"><con:settings/><con:parameters/><con:method name="User.confirm" id="e74e752f-21f0-4075-ad20-9a27ff284130" method="GET"><con:description>
Confirm a user registration with email verification token.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>uid</con:name><con:style>QUERY</con:style><con:description xsi:nil="true"/></con:parameter><con:parameter required="true"><con:name>token</con:name><con:style>QUERY</con:style><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>redirect</con:name><con:style>QUERY</con:style><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>204</con:status><con:params/></con:representation><con:request name="Request 1" id="85500905-30d7-4e94-a147-883de08049b5" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/Users/count" path="/Users/count" id="dc050b29-4dcc-4360-a7a8-266d44230a2c"><con:settings/><con:parameters/><con:method name="User.count" id="659aef32-9c4f-4a58-81d4-462abd0f0883" method="GET"><con:description>
Count instances of the model matched by where from the data source.</con:description><con:settings/><con:parameters><con:parameter><con:name>where</con:name><con:style>QUERY</con:style><con:description>Criteria to match model instances</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="92687183-8f85-4282-ba8d-67811d17d9b3" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/Users/findOne" path="/Users/findOne" id="9dfc1233-adea-48fe-ba7c-7c3ac1f8af5e"><con:settings/><con:parameters/><con:method name="User.findOne" id="a87c3f46-beb4-4300-9a1d-4e90a765895f" method="GET"><con:description>
Find first instance of the model matched by filter from the data source.</con:description><con:settings/><con:parameters><con:parameter><con:name>filter</con:name><con:style>QUERY</con:style><con:description>Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="14f233f6-67fa-4c64-bd74-1f2ffcd11b99" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/Users/login" path="/Users/login" id="a4091df6-44a4-466e-adb1-65a0ef1c4aea"><con:settings/><con:parameters/><con:method name="User.login" id="baf28bf0-aa6c-4677-b368-6e58f2122167" method="POST"><con:description>
Login a user with username/email and password.</con:description><con:settings/><con:parameters><con:parameter><con:name>include</con:name><con:style>QUERY</con:style><con:description>Related objects to include in the response. See the description of return value for more details.</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:log="http://localhost/api/Users/login">log:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:log="http://localhost/api/Users/login">log:Fault</con:element></con:representation><con:request name="Request 1" id="c4c2a596-89f6-4c73-8d95-02b38e99afdd" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/Users/logout" path="/Users/logout" id="f9dbdd35-5289-4aca-8f43-eece569d39db"><con:settings/><con:parameters><con:parameter><con:name>access_token</con:name><con:style>QUERY</con:style></con:parameter></con:parameters><con:method name="User.logout" id="490f8733-5e7a-460f-9589-0048871bc026" method="POST"><con:description>
Logout a user with access token.</con:description><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>204</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:log="http://localhost/api/Users/logout">log:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="06e24dea-879d-45c7-98f8-9f4c64973745" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://0.0.0.0:3000</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry/></con:parameterOrder></con:request></con:method></con:resource><con:resource name="/Users/replaceOrCreate" path="/Users/replaceOrCreate" id="16897c73-bf4d-4f95-8f6a-f55577a1c284"><con:settings/><con:parameters/><con:method name="User.replaceOrCreate" id="3ce249fa-970b-4695-bf5b-21fef2ceb497" method="POST"><con:description>
Replace an existing model instance or insert a new one into the data source.</con:description><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="5659345f-56b0-4226-9a2a-bbb5daeb4576" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/Users/reset" path="/Users/reset" id="e7626d50-d551-4589-8f8f-59a203fffc0b"><con:settings/><con:parameters/><con:method name="User.resetPassword" id="7d4138f2-d3cc-4e98-bf3d-f507138fa60c" method="POST"><con:description>
Reset password for a user with email.</con:description><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>204</con:status><con:params/></con:representation><con:request name="Request 1" id="f95f8472-8b94-45c9-93c5-d21fbe04f1fd" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/Users/update" path="/Users/update" id="61d86458-7444-4362-8159-84341f3e313c"><con:settings/><con:parameters/><con:method name="User.updateAll" id="8afdc210-54df-4f96-ac56-b9f9b716a666" method="POST"><con:description>
Update instances of the model matched by {{where}} from the data source.</con:description><con:settings/><con:parameters><con:parameter><con:name>where</con:name><con:style>QUERY</con:style><con:description>Criteria to match model instances</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="ffd44969-5fad-4c49-8e91-3cea302c68b8" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/Users/upsertWithWhere" path="/Users/upsertWithWhere" id="0c2d2e47-e88f-4aa8-b3e7-c235b20b3a4b"><con:settings/><con:parameters/><con:method name="User.upsertWithWhere" id="61cb0d65-89b2-4a02-bae4-a20346147fe1" method="POST"><con:description>
Update an existing model instance or insert a new one into the data source based on the where criteria.</con:description><con:settings/><con:parameters><con:parameter><con:name>where</con:name><con:style>QUERY</con:style><con:description>Criteria to match model instances</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="a3637b83-92c4-4c55-9664-7d93dde11f6b" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/Users/{id}" path="/Users/{id}" id="777c555f-ec92-49e8-87e9-cac4c791d2e5"><con:settings/><con:parameters/><con:method name="User.findById" id="9bad8f1d-d7e2-469b-a11b-300aa369a42f" method="GET"><con:description>
Find a model instance by {{id}} from the data source.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>Model id</con:description></con:parameter><con:parameter><con:name>filter</con:name><con:style>QUERY</con:style><con:description>Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="d89b8efb-1101-4598-ae28-929597aa5641" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="User.prototype.updateAttributes__put_Users_{id}" id="d1ec86b3-b79c-4fcd-a1ea-0c2a9d762f68" method="PUT"><con:description>
Patch attributes for a model instance and persist it into the data source.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>User id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="4b727997-4883-4291-95f7-740a27d60fca" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="User.deleteById" id="16190782-8096-40f3-aa0a-d2f2c0f3d8db" method="DELETE"><con:description>
Delete a model instance by {{id}} from the data source.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>Model id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="e47c7450-1e55-42bd-94fa-1c315100506c" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="User.prototype.updateAttributes__patch_Users_{id}" id="bcfc3665-ff9d-422d-8087-f0a5afcc54a4" method="PATCH"><con:description>
Patch attributes for a model instance and persist it into the data source.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>User id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="1f6b12bc-be48-4e5a-a8cc-5f3b4d10f1de" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/Users/{id}/accessTokens" path="/Users/{id}/accessTokens" id="2244d464-13eb-474c-92db-912918c96927"><con:settings/><con:parameters/><con:method name="User.prototype.__get__accessTokens" id="bfed5150-63f4-4de1-8fac-858edd10ee3e" method="GET"><con:description>
Queries accessTokens of User.</con:description><con:settings/><con:parameters><con:parameter><con:name>filter</con:name><con:style>QUERY</con:style><con:description xsi:nil="true"/></con:parameter><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>User id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="edc40fa7-aef9-46a9-ac66-ecac9da37be9" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="User.prototype.__create__accessTokens" id="80c24017-4763-4c27-babf-0d65e5d25804" method="POST"><con:description>
Creates a new instance in accessTokens of this model.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>User id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="3187be16-ba90-4d8d-a2e8-0efcffa9d12c" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="User.prototype.__delete__accessTokens" id="3d391d18-7a83-4ad1-858e-56068a772a7f" method="DELETE"><con:description>
Deletes all accessTokens of this model.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>User id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>204</con:status><con:params/></con:representation><con:request name="Request 1" id="02cbf897-9fe0-4048-a0a3-3efa26bb3a05" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/Users/{id}/accessTokens/count" path="/Users/{id}/accessTokens/count" id="ae874de5-fb30-4315-bb1d-9eb315f6ee4c"><con:settings/><con:parameters/><con:method name="User.prototype.__count__accessTokens" id="bc1b7974-177f-425f-890d-1e0d3ec97356" method="GET"><con:description>
Counts accessTokens of User.</con:description><con:settings/><con:parameters><con:parameter><con:name>where</con:name><con:style>QUERY</con:style><con:description>Criteria to match model instances</con:description></con:parameter><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>User id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="abfb0a91-8b56-4714-a528-1df53cefe1a3" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/Users/{id}/accessTokens/{fk}" path="/Users/{id}/accessTokens/{fk}" id="bd697193-a8e5-420c-b8b6-ebbd95c487b7"><con:settings/><con:parameters/><con:method name="User.prototype.__findById__accessTokens" id="2f7959ea-535c-408c-91b1-75e25893e5ff" method="GET"><con:description>
Find a related item by id for accessTokens.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>fk</con:name><con:style>TEMPLATE</con:style><con:description>Foreign key for accessTokens</con:description></con:parameter><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>User id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="22081e50-5a1c-4b04-aa93-3ea66b94022b" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="User.prototype.__updateById__accessTokens" id="84a300a4-d641-4984-88e9-2404768a3ac7" method="PUT"><con:description>
Update a related item by id for accessTokens.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>fk</con:name><con:style>TEMPLATE</con:style><con:description>Foreign key for accessTokens</con:description></con:parameter><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>User id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="bb5c0f97-98e3-4748-b5a3-494f88aaa8c5" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="User.prototype.__destroyById__accessTokens" id="7260967a-92e4-4844-bd66-82240aae3ee4" method="DELETE"><con:description>
Delete a related item by id for accessTokens.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>fk</con:name><con:style>TEMPLATE</con:style><con:description>Foreign key for accessTokens</con:description></con:parameter><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>User id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>204</con:status><con:params/></con:representation><con:request name="Request 1" id="64c60fae-2ff9-4dc2-9c78-9c7aacbd41df" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/Users/{id}/exists" path="/Users/{id}/exists" id="317c8c8c-fbd5-4a35-82ed-bb0c03cb2167"><con:settings/><con:parameters/><con:method name="User.exists__get_Users_{id}_exists" id="8bfc332e-09f6-421a-b263-53bfad367183" method="GET"><con:description>
Check whether a model instance exists in the data source.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>Model id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="54b80934-c83d-4218-83c1-fd9db04f6d24" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/Users/{id}/replace" path="/Users/{id}/replace" id="3e3a03c3-0db3-4701-aff2-8eeb49c647d2"><con:settings/><con:parameters/><con:method name="User.replaceById" id="1221c007-2ae2-4dd5-a18c-66415253cc93" method="POST"><con:description>
Replace attributes for a model instance and persist it into the data source.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>Model id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="95b59e07-e526-44cd-bf25-d71a537923fa" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/products" path="/products" id="ae5e525d-dd9b-4fea-a431-ff3b78ccc96c"><con:settings/><con:parameters/><con:method name="Product.find" id="1002fbd5-c154-47f1-9576-8049e36d1d4c" method="GET"><con:description>
Find all instances of the model matched by filter from the data source.</con:description><con:settings/><con:parameters><con:parameter><con:name>filter</con:name><con:style>QUERY</con:style><con:description>Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:request name="Request 1" id="83080dc7-da30-4f95-a9c7-dc27a58566dc" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://0.0.0.0:3000</con:endpoint><con:request/><con:originalUri>http://0.0.0.0/api/products</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="Product.create" id="78e4c433-e3de-4e70-a7e8-612f32430ea7" method="POST"><con:description>
Create a new instance of the model and persist it into the data source.</con:description><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="5ee0f74f-3b63-4cf4-a1d1-9a545971b38d" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Product.upsert__put_products" id="44311c20-a718-4b3a-8372-b382e741c6bb" method="PUT"><con:description>
Patch an existing model instance or insert a new one into the data source.</con:description><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="93287ab1-4f6f-42f8-b3e3-02030b9faf7a" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Product.upsert__patch_products" id="33bf0d1b-34cf-46fa-b9a7-894cbb531980" method="PATCH"><con:description>
Patch an existing model instance or insert a new one into the data source.</con:description><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="03cd5798-74ec-4981-99d3-97f4b0fa7e03" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/products/change-stream" path="/products/change-stream" id="7b4d53cf-2492-4910-a5c6-468246152931"><con:settings/><con:parameters/><con:method name="Product.createChangeStream__get_products_change-stream" id="aa4c362a-78da-4d8a-8637-6d72e9469437" method="GET"><con:description>
Create a change stream.</con:description><con:settings/><con:parameters><con:parameter><con:name>options</con:name><con:style>QUERY</con:style><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="c3480abb-ecf7-45ba-bb0d-b4458d1f9718" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Product.createChangeStream__post_products_change-stream" id="78420071-edba-4ca8-be62-4f6e5f2bd7d1" method="POST"><con:description>
Create a change stream.</con:description><con:settings/><con:parameters><con:parameter><con:name>options</con:name><con:style>QUERY</con:style><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="bcf48ffc-c62a-4657-8e36-200ddad61193" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/products/count" path="/products/count" id="d1e27625-cdee-41c3-b719-c1739caa0eb6"><con:settings/><con:parameters/><con:method name="Product.count" id="a072e836-0060-4f94-8de9-a6479780157f" method="GET"><con:description>
Count instances of the model matched by where from the data source.</con:description><con:settings/><con:parameters><con:parameter><con:name>where</con:name><con:style>QUERY</con:style><con:description>Criteria to match model instances</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="936b8515-fd5d-4229-9569-dedacfdb0e82" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/products/findOne" path="/products/findOne" id="8558ef37-333a-4d6f-8009-9db2326fffb9"><con:settings/><con:parameters/><con:method name="Product.findOne" id="b5ed9ccf-8d56-4985-b1cb-d23569283dcf" method="GET"><con:description>
Find first instance of the model matched by filter from the data source.</con:description><con:settings/><con:parameters><con:parameter><con:name>filter</con:name><con:style>QUERY</con:style><con:description>Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:fin="http://0.0.0.0/api/products/findOne">fin:Response</con:element></con:representation><con:request name="Request 1" id="f075d18f-1d74-4f0d-af63-6ec43fade2e1" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/products/replaceOrCreate" path="/products/replaceOrCreate" id="98ddf214-eb2e-42e4-a89f-290b2fc6df54"><con:settings/><con:parameters/><con:method name="Product.replaceOrCreate" id="b8cebcc3-8dd5-480b-9d7b-af18feab27e9" method="POST"><con:description>
Replace an existing model instance or insert a new one into the data source.</con:description><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="3db33125-9d4f-4892-b5eb-e33b0719cfbb" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/products/update" path="/products/update" id="063c230c-9fa4-47bc-9ef3-13c538a92a23"><con:settings/><con:parameters/><con:method name="Product.updateAll" id="f669e264-9277-4f95-a135-1a3f7249e908" method="POST"><con:description>
Update instances of the model matched by {{where}} from the data source.</con:description><con:settings/><con:parameters><con:parameter><con:name>where</con:name><con:style>QUERY</con:style><con:description>Criteria to match model instances</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="8793741b-58ca-4cd6-8f29-9f066012ef44" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/products/upsertWithWhere" path="/products/upsertWithWhere" id="597ba411-6079-42d8-b91e-c7065d5d6fca"><con:settings/><con:parameters/><con:method name="Product.upsertWithWhere" id="55533fe6-bf99-4312-950e-5543c375af39" method="POST"><con:description>
Update an existing model instance or insert a new one into the data source based on the where criteria.</con:description><con:settings/><con:parameters><con:parameter><con:name>where</con:name><con:style>QUERY</con:style><con:description>Criteria to match model instances</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="dbdacd1c-d406-4f3a-a41e-355afc045e9f" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/products/{id}" path="/products/{id}" id="6e8d2301-f415-4121-9fb3-9c2bbe4fb63b"><con:settings/><con:parameters/><con:method name="Product.findById" id="b1bd57f6-8568-42cb-8e76-76d30df68349" method="GET"><con:description>
Find a model instance by {{id}} from the data source.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>Model id</con:description></con:parameter><con:parameter><con:name>filter</con:name><con:style>QUERY</con:style><con:description>Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ns="http://0.0.0.0/api/products/111">ns:Response</con:element></con:representation><con:request name="Request 1" id="f205166a-9c9d-4322-a96e-9350de4f598f" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Product.prototype.updateAttributes__put_products_{id}" id="0051b069-22f1-4aef-a8d3-15a25b2bf743" method="PUT"><con:description>
Patch attributes for a model instance and persist it into the data source.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>Product id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="d20f2028-f7d1-4394-89b1-44df9be0eded" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Product.deleteById" id="13223c42-be11-40ad-b892-3bb0c80fa04c" method="DELETE"><con:description>
Delete a model instance by {{id}} from the data source.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>Model id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="0e1c12e5-2549-4805-a3fe-49d01b9ce3cb" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Product.prototype.updateAttributes__patch_products_{id}" id="3b69239e-1c19-4c8a-a4d5-ed974dcae727" method="PATCH"><con:description>
Patch attributes for a model instance and persist it into the data source.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>Product id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="0c259305-08cb-457f-8a9e-3b9d7fcac28e" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/products/{id}/exists" path="/products/{id}/exists" id="c4352f2c-21ae-4ac9-86e8-2f8b5538fd99"><con:settings/><con:parameters/><con:method name="Product.exists__get_products_{id}_exists" id="7bc2af27-ad55-4377-8885-b594a681ec04" method="GET"><con:description>
Check whether a model instance exists in the data source.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>Model id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="5aa1ff25-e4b6-4cb7-844f-3e7c6a6724f6" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/products/{id}/replace" path="/products/{id}/replace" id="eecb1076-0af6-4741-879f-a420ded02a7b"><con:settings/><con:parameters/><con:method name="Product.replaceById" id="d38799f6-a27d-46ec-bc3b-87f8e511cbd5" method="POST"><con:description>
Replace attributes for a model instance and persist it into the data source.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>Model id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="4c39b134-47d9-4cde-8b0e-02fdc641abcc" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/products/{id}/reviews" path="/products/{id}/reviews" id="e9671d1f-db36-4482-889d-e232418e93f2"><con:settings/><con:parameters/><con:method name="Product.prototype.__get__reviews" id="5173ea40-c44c-4370-80f9-0f5f34fa2ea2" method="GET"><con:description>
Queries reviews of Product.</con:description><con:settings/><con:parameters><con:parameter><con:name>filter</con:name><con:style>QUERY</con:style><con:description xsi:nil="true"/></con:parameter><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>Product id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="14508767-9d60-4aa9-b683-18776278642e" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Product.prototype.__create__reviews" id="314cbf1b-b508-4b33-983c-a31d413f7cfd" method="POST"><con:description>
Creates a new instance in reviews of this model.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>Product id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="89b5b660-72a4-4233-89c7-bf56106d7e6c" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Product.prototype.__delete__reviews" id="e026b24f-f9f4-4d92-9896-c5eb4e7bfb85" method="DELETE"><con:description>
Deletes all reviews of this model.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>Product id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>204</con:status><con:params/></con:representation><con:request name="Request 1" id="67cce31c-a69b-46e7-ac43-9bb81b0aff3a" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/products/{id}/reviews/count" path="/products/{id}/reviews/count" id="5bbfac36-48b5-4394-afd9-f123bbe1145e"><con:settings/><con:parameters/><con:method name="Product.prototype.__count__reviews" id="84898880-8911-4c7b-b7b4-cf9b06708adb" method="GET"><con:description>
Counts reviews of Product.</con:description><con:settings/><con:parameters><con:parameter><con:name>where</con:name><con:style>QUERY</con:style><con:description>Criteria to match model instances</con:description></con:parameter><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>Product id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="85e535cb-dcd9-4899-99b3-5aa55ef9d979" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/products/{id}/reviews/{fk}" path="/products/{id}/reviews/{fk}" id="1acb545e-ee8b-47b9-837f-569a9746b385"><con:settings/><con:parameters/><con:method name="Product.prototype.__findById__reviews" id="18326674-e167-407a-8545-4c4e6201e7f1" method="GET"><con:description>
Find a related item by id for reviews.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>fk</con:name><con:style>TEMPLATE</con:style><con:description>Foreign key for reviews</con:description></con:parameter><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>Product id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="afdd0c95-261c-4a22-8f69-833e35decec5" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Product.prototype.__updateById__reviews" id="69a61bcb-d977-475a-bb36-470218268432" method="PUT"><con:description>
Update a related item by id for reviews.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>fk</con:name><con:style>TEMPLATE</con:style><con:description>Foreign key for reviews</con:description></con:parameter><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>Product id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="dbac8d0f-9d65-411c-9594-eff4a04661da" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Product.prototype.__destroyById__reviews" id="e97712cf-216e-4f97-95e4-e6338275f47a" method="DELETE"><con:description>
Delete a related item by id for reviews.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>fk</con:name><con:style>TEMPLATE</con:style><con:description>Foreign key for reviews</con:description></con:parameter><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>Product id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>204</con:status><con:params/></con:representation><con:request name="Request 1" id="f7b250bf-1965-42c7-b710-6f15ce0e8bcd" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/reviews" path="/reviews" id="55c13326-9476-4804-b5bc-98e5bd7d9a7f"><con:settings/><con:parameters/><con:method name="Review.find" id="20cbf2fb-e54d-437b-9a62-2d0a9cac03b7" method="GET"><con:description>
Find all instances of the model matched by filter from the data source.</con:description><con:settings/><con:parameters><con:parameter><con:name>filter</con:name><con:style>QUERY</con:style><con:description>Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="21ae55ee-853e-410f-94e4-1bd2a2fed593" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Review.create" id="398aaa96-589c-40fe-bc26-8c36b62209d2" method="POST"><con:description>
Create a new instance of the model and persist it into the data source.</con:description><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="ba3bf17d-c462-40d0-9878-3444fa47c5c2" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Review.upsert__put_reviews" id="b35a5425-1c26-4899-8e45-fb6b463b9b92" method="PUT"><con:description>
Patch an existing model instance or insert a new one into the data source.</con:description><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="74cd158e-a58d-4d8a-9f77-c5a5c34ce409" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Review.upsert__patch_reviews" id="05797d2d-8e7b-4d0d-b596-56ef42be7d5c" method="PATCH"><con:description>
Patch an existing model instance or insert a new one into the data source.</con:description><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="54da55ea-d966-43ad-9d79-6d4a73567cf2" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/reviews/change-stream" path="/reviews/change-stream" id="1082e55c-7097-465f-b649-8b25492a04f1"><con:settings/><con:parameters/><con:method name="Review.createChangeStream__get_reviews_change-stream" id="4726fc07-ec00-4ef6-8cf4-7a4b257f4575" method="GET"><con:description>
Create a change stream.</con:description><con:settings/><con:parameters><con:parameter><con:name>options</con:name><con:style>QUERY</con:style><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="9c711296-baf3-4142-b4dc-22f53552b16c" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Review.createChangeStream__post_reviews_change-stream" id="a0330bcc-5da8-4216-9101-7d5dfabfc46c" method="POST"><con:description>
Create a change stream.</con:description><con:settings/><con:parameters><con:parameter><con:name>options</con:name><con:style>QUERY</con:style><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="801c4719-e8d8-4429-9ed8-bf45d526d93f" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/reviews/count" path="/reviews/count" id="1dd68d2c-7a16-4473-bb39-711b96a722e9"><con:settings/><con:parameters/><con:method name="Review.count" id="2ae93c40-4659-4c2e-8100-50ff57e27466" method="GET"><con:description>
Count instances of the model matched by where from the data source.</con:description><con:settings/><con:parameters><con:parameter><con:name>where</con:name><con:style>QUERY</con:style><con:description>Criteria to match model instances</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="bf969c26-d219-4381-b07c-31e193c6d275" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/reviews/findOne" path="/reviews/findOne" id="2d739b1f-01ef-4c85-9717-c8220df634ec"><con:settings/><con:parameters/><con:method name="Review.findOne" id="4bde5297-db44-48cf-b4a9-078778eefb4c" method="GET"><con:description>
Find first instance of the model matched by filter from the data source.</con:description><con:settings/><con:parameters><con:parameter><con:name>filter</con:name><con:style>QUERY</con:style><con:description>Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="0c22b914-edf5-4489-953d-09fb77536f27" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/reviews/replaceOrCreate" path="/reviews/replaceOrCreate" id="19972886-c0d1-4517-ade1-e82c483969a1"><con:settings/><con:parameters/><con:method name="Review.replaceOrCreate" id="a8ff6114-99d7-4228-9882-2807ef761bcb" method="POST"><con:description>
Replace an existing model instance or insert a new one into the data source.</con:description><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="75aa1c33-1afa-4636-add8-3987493e945f" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/reviews/update" path="/reviews/update" id="c9137d83-cec8-478f-a347-cb1cf47aeb90"><con:settings/><con:parameters/><con:method name="Review.updateAll" id="0f30e9d0-dc48-4891-b898-356fcc5a2ff1" method="POST"><con:description>
Update instances of the model matched by {{where}} from the data source.</con:description><con:settings/><con:parameters><con:parameter><con:name>where</con:name><con:style>QUERY</con:style><con:description>Criteria to match model instances</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="2296a104-4ee9-488b-80be-3290b0e4c024" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/reviews/upsertWithWhere" path="/reviews/upsertWithWhere" id="b6213061-9eea-4133-b337-e7b579c3e2b7"><con:settings/><con:parameters/><con:method name="Review.upsertWithWhere" id="fb383e00-fd90-46ec-b148-f317dd6373d0" method="POST"><con:description>
Update an existing model instance or insert a new one into the data source based on the where criteria.</con:description><con:settings/><con:parameters><con:parameter><con:name>where</con:name><con:style>QUERY</con:style><con:description>Criteria to match model instances</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="70d11387-f43e-4d75-916a-4cc8015ccfa9" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/reviews/{id}" path="/reviews/{id}" id="258ab301-5f2d-4b45-85d9-15d1886415d4"><con:settings/><con:parameters/><con:method name="Review.findById" id="614c8d1e-bd90-49a2-b0d3-ad7515bec2b9" method="GET"><con:description>
Find a model instance by {{id}} from the data source.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>Model id</con:description></con:parameter><con:parameter><con:name>filter</con:name><con:style>QUERY</con:style><con:description>Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="429ba7be-7dc0-4f88-9495-21207970f87d" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Review.prototype.updateAttributes__put_reviews_{id}" id="4b9fd20e-6f58-4772-821a-6f9908af74f7" method="PUT"><con:description>
Patch attributes for a model instance and persist it into the data source.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>Review id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="5bddd35d-80f8-42cb-b2a9-b495a6bfc8eb" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Review.deleteById" id="f5380aee-788c-4e47-82ee-0b0f0d8333af" method="DELETE"><con:description>
Delete a model instance by {{id}} from the data source.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>Model id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="a07f5423-43e8-44f9-a2fb-131d5c4a35da" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Review.prototype.updateAttributes__patch_reviews_{id}" id="b3bb9e0f-9e48-40a2-b217-d1e26bd425d5" method="PATCH"><con:description>
Patch attributes for a model instance and persist it into the data source.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>Review id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="219c8b50-61e8-44b5-a84c-8995fec457b5" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/reviews/{id}/exists" path="/reviews/{id}/exists" id="a2544f19-f990-49a8-a119-c83e38d8eab0"><con:settings/><con:parameters/><con:method name="Review.exists__get_reviews_{id}_exists" id="333e7252-6088-4108-88f4-78665a964887" method="GET"><con:description>
Check whether a model instance exists in the data source.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>Model id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="d204fa51-e223-43c8-a8ae-f5c194f2346b" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/reviews/{id}/product" path="/reviews/{id}/product" id="d774a9ee-ec6c-434a-a695-8d3c12a18eb4"><con:settings/><con:parameters/><con:method name="Review.prototype.__get__product" id="5595fd79-79cb-42f8-b508-3c2cf2998cfb" method="GET"><con:description>
Fetches belongsTo relation product.</con:description><con:settings/><con:parameters><con:parameter><con:name>refresh</con:name><con:style>QUERY</con:style><con:description xsi:nil="true"/></con:parameter><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>Review id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="d043ac24-e4ae-4937-a3c6-c68797bc6635" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/reviews/{id}/replace" path="/reviews/{id}/replace" id="447db87e-df8a-4607-b4f9-b74a98b7410d"><con:settings/><con:parameters/><con:method name="Review.replaceById" id="d512d981-c611-4f25-bed2-b25ebecc11ed" method="POST"><con:description>
Replace attributes for a model instance and persist it into the data source.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>Model id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="c363081a-a370-4132-b6d4-f43f9facde5b" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="ce85cae0-b899-4e7d-8cc0-c2d092d421bf" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://localhost:8080" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>http://localhost:8080</con:endpoint></con:endpoints><con:resource name="Products" path="/products" id="a4bfa04f-a7b0-4da8-b395-194df5bdff1f"><con:settings/><con:parameters/><con:method name="Products 1" id="82bf826f-cd39-483c-b8e6-177607e88fab" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:request name="Request 1" id="5ad87408-c23d-4536-83c4-c3ab3b44a89b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8080</con:endpoint><con:request/><con:originalUri>http://localhost/products</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:testSuite id="5a2e8396-a846-48e8-bf6b-6de88cece93e" name="TestSuite 1"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="e50d0f93-3aff-4237-86e0-d42abb5a7a08" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase 1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="data-driven-Groovy Script" id="28f22122-eade-47ed-9239-4ef421d2658a"><con:settings/><con:config><script>import org.apache.poi.ss.usermodel.*;
import org.apache.poi.hssf.usermodel.*;
import org.apache.poi.xssf.usermodel.*;
import org.apache.poi.ss.util.*;
import org.apache.poi.ss.usermodel.*;
import java.io.*;
 
class ExcelReader {
  
  def readData() {
        def path = "/Users/nag-training/Desktop/soapui/soapui-sample-projects/data/users.xlsx";
        InputStream inputStream = new FileInputStream(path);
        Workbook workbook = WorkbookFactory.create(inputStream);
        Sheet sheet = workbook.getSheetAt(0);
                      
        Iterator rowIterator = sheet.rowIterator();
        rowIterator.next()
        Row row;                       
        def rowsData = []
        while(rowIterator.hasNext()) {
             row = rowIterator.next()
             def rowIndex = row.getRowNum()
             def colIndex;
             def rowData = []
             for (Cell cell : row) {
                 colIndex = cell.getColumnIndex()
                  rowData[colIndex] = cell.getRichStringCellValue().getString();
             }                    
             rowsData &lt;&lt; rowData
         }
         rowsData
  }
 }
 
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def myTestCase = context.testCase
 
ExcelReader excelReader = new ExcelReader();
List rows = excelReader.readData();
println rows;
def d = []
Iterator i = rows.iterator();
while( i.hasNext()){
         d = i.next();
         myTestCase.setPropertyValue("username", d[0])
         myTestCase.setPropertyValue("password", d[1]) 
         myTestCase.setPropertyValue("email", d[2])    
         context.userId=1  
         testRunner.runTestStepByName( "User.create - Request 1")
         testRunner.runTestStepByName( "User.login - Request 1")
}
         </script></con:config></con:testStep><con:testStep type="restrequest" name="User.create - Request 1" id="5d4fd5ce-27a4-47bf-9cef-2b197976dd5b"><con:settings/><con:config service="shop-api" resourcePath="/api/Users" methodName="User.create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="User.create - Request 1" id="dcc29490-1bc5-4eb7-b6bc-c02ee84110fd" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
	"username":"${#TestCase#username}",
	"password":"${#TestCase#password}",
	"email":"${#TestCase#email}"
}</con:request><con:originalUri>http://localhost/api/Users</con:originalUri><con:assertion type="GroovyScriptAssertion" id="e1bfb481-41e0-40b5-8e5f-2fede617bcdd" name="Script Assertion"><con:configuration><scriptText>

// imports
import groovy.json.JsonSlurper

def response=messageExchange.response;
def status =  messageExchange.getResponseStatusCode()
//grab the response
def ResponseMessage = response.responseContent
//define a JsonSlurper
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)

//
//def isValid=true
//if(status==200 || status==422){
//	isValid=false
//}
//

assert true









</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="User.login - Request 1" id="c1cd1a3e-ec69-4d4d-9a75-0a3045c6d9be"><con:settings/><con:config service="shop-api" resourcePath="/api/Users/login" methodName="User.login" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="User.login - Request 1" id="c4c2a596-89f6-4c73-8d95-02b38e99afdd" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
	"username":"${#TestCase#username}",
	"password":"${#TestCase#password}"
}
</con:request><con:originalUri>http://localhost/api/Users/login</con:originalUri><con:assertion type="JsonPath Existence Match" id="6ce4d62b-2c31-4f92-a81c-4345398635f2" name="JsonPath Existence Match"><con:configuration><path>$.id</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="c9c6aed3-ad92-4218-9f17-ff2665109f9a"><con:settings/><con:config><script>
import groovy.json.JsonSlurper

//def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );
def testCase = testRunner.testCase;
def loginStep = testCase.getTestStepByName("User.login - Request 1");

def loginResponse=loginStep.getPropertyValue('Response')
def jsonSlurper = new JsonSlurper().parseText(loginResponse)
def accessToken=jsonSlurper.id

def propertiesStep=testCase.getTestStepByName("Properties");
propertiesStep.setPropertyValue('access_token',accessToken)
//testRunner.gotoStepByName( "Properties")
testRunner.runTestStepByName( "Properties")
testRunner.runTestStepByName( "User.logout - Request 1")


</script></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="ebadfb33-0aa5-480d-bd07-715e0b7a7340" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>token-txr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>User.login - Request 1</con:sourceStep><con:sourcePath>$.id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties" id="f469630b-3d85-4ad1-a1bb-13413b4091f6"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>9KKWDtOEDWFZV3yYrlLG07pwBeKgO6jQSHhSktrD0gEP4JQueCSLzXGvA5mqepgq</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="User.logout - Request 1" id="81ebb184-5e25-415c-8d84-295955a07988"><con:settings/><con:config service="shop-api" resourcePath="/api/Users/logout" methodName="User.logout" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="User.logout - Request 1" id="06e24dea-879d-45c7-98f8-9f4c64973745" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://0.0.0.0:3000</con:endpoint><con:request/><con:originalUri>http://0.0.0.0/api/Users/logout</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="access_token" value="${Properties#access_token}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>username</con:name><con:value>user5</con:value></con:property><con:property><con:name>password</con:name><con:value>secret5</con:value></con:property><con:property><con:name>email</con:name><con:value>user5@email.com</con:value></con:property><con:property><con:name>From</con:name><con:value>user5</con:value></con:property><con:property><con:name>To</con:name><con:value>secret5</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:restMockService id="a4f1e15f-bdd8-43c9-baa6-7818edded6cb" port="8080" path="/" host="NAGABHUSHANAMs-MacBook-Pro.local" name="REST MockService 1"><con:settings/><con:properties/><con:restMockAction name="/products" method="GET" resourcePath="/products" id="6d60bf29-3cab-4d89-804c-c810212b1667"><con:settings/><con:defaultResponse xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 1" id="d52ccc57-a5af-4e0f-991b-93058d6cae70" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>[
  {
    "id": 111,
    "name": "Laptop",
    "price": 19800,
    "makeDate": "2018-06-12T00:00:00.000Z",
    "description": "New Mac Pro"
  },
  {
    "id": 222,
    "name": "Mobile",
    "price": 1800,
    "makeDate": "2018-06-12T00:00:00.000Z",
    "description": "New Pro"
  },
  {
    "id": 333,
    "name": "New Item",
    "price": 1800,
    "makeDate": "2018-06-12T00:00:00.000Z",
    "description": "New Mac Pro"
  },
  {
    "id": 444,
    "name": "biryani",
    "price": 220,
    "makeDate": null,
    "description": "yummy"
  }
]</con:responseContent></con:response></con:restMockAction><con:restMockAction name="/products/{id}" method="GET" resourcePath="/products/111" id="77f30d9c-ce73-4b25-a873-421100f58e08"><con:settings/><con:defaultResponse xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 1" id="5f9463cc-41ba-452f-ad13-c4d10a2323f5" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
    "id": 111,
    "name": "Laptop",
    "price": 19800,
    "makeDate": "2018-06-12T00:00:00.000Z",
    "description": "New Mac Pro"
  }</con:responseContent></con:response></con:restMockAction></con:restMockService><con:properties><con:property><con:name>project</con:name><con:value>PROJECT</con:value></con:property><con:property><con:name>MyProp</con:name><con:value>some-value</con:value></con:property><con:property><con:name>endpoint</con:name><con:value>http://localhost:3000</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>